apply plugin: 'com.android.library'

apply from: './VERSIONS.gradle'
def applicationId = getApplicationId()
def hasGradle3Support = getGradle3Support()
def resourcePrefix = getResourcePrefix()

// https://hackernoon.com/android-how-to-add-gradle-dependencies-using-foreach-c4cbcc070458
def oreoDependencies = [
    [configuration: "androidTestImplementation", dependency: androidLibs.supportAnnotations],
    [configuration: "androidTestImplementation", dependency: testLibs.testRunner],
    [configuration: "androidTestImplementation", dependency: testLibs.testRules],
    [configuration: "testImplementation", dependency: testLibs.junit],
    [configuration: "testImplementation", dependency: testLibs.json],
    [configuration: "testImplementation", dependency: testLibs.robolectric],
    [configuration: "testImplementation", dependency: testLibs.mockitoCore],
    [configuration: "implementation", dependency: androidLibs.playServicesLocation],
    [configuration: "implementation", dependency: androidLibs.supportCompat],
    [configuration: "implementation", dependency: androidLibs.appcompat],
    [configuration: "implementation", dependency: libs.permissions,
        options: { exclude group: 'com.android.support', module: 'appcompat-v7'}],
    [configuration: "implementation", dependency: libs.logback],
    [configuration: "implementation", dependency: libs.slf4j],
    [configuration: "implementation", dependency: libs.promise],
    [configuration: "implementation", dependency: libs.commonsio],
]

def preoreoDependencies = [
    [configuration: "androidTestCompile", dependency: androidLibs.supportAnnotations],
    [configuration: "androidTestCompile", dependency: testLibs.testRunner],
    [configuration: "androidTestCompile", dependency: testLibs.testRules],
    [configuration: "testCompile", dependency: testLibs.junit],
    [configuration: "testCompile", dependency: testLibs.json],
    [configuration: "testCompile", dependency: testLibs.robolectric],
    [configuration: "testCompile", dependency: testLibs.mockitoCore],
    [configuration: "compile", dependency: androidLibs.playServicesLocation],
    [configuration: "oreoCompile", dependency: androidLibs.supportCompat],
    [configuration: "compile", dependency: androidLibs.appcompat],
    [configuration: "compile", dependency: libs.permissions,
        options: { exclude group: 'com.android.support', module: 'appcompat-v7'}],
    [configuration: "compile", dependency: libs.logback],
    [configuration: "compile", dependency: libs.slf4j],
    [configuration: "compile", dependency: libs.promise],
    [configuration: "compile", dependency: libs.commonsio],
]

buildscript {
    repositories {
        maven {
            url 'https://maven.google.com/'
            name 'Google'
        }
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.2.3'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven {
            url 'https://maven.google.com'
        }
        jcenter()
    }
}

android {
    compileSdkVersion project.ext.getCompileSdkVersion()
    buildToolsVersion project.ext.getBuildToolsVersion()
    publishNonDefault true

    defaultConfig {
        resValue "string", resourcePrefix + "account_name", 'Locations'
        resValue "string", resourcePrefix + "account_type", applicationId + '.mauron85.bgloc.account'
        resValue "string", resourcePrefix + "content_authority", applicationId + '.mauron85.bgloc.provider'
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        minSdkVersion project.ext.getMinSdkVersion()
        versionCode 1
        versionName "1.0"
    }

    sourceSets {
        main {
            if (hasGradle3Support) {
                java.srcDirs = ['src/main/java', 'src/oreo/java']
            }
        }
    }

    flavorDimensions 'default'

    productFlavors {
        if (!hasGradle3Support) {
            preoreo {
                targetSdkVersion project.ext.getTargetSdkVersion()
                dimension 'default'
            }
            oreo {
                versionNameSuffix 'oreo'
                targetSdkVersion project.ext.getTargetSdkVersion()
                dimension 'default'
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    testOptions {
        //unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
    }

    lintOptions {
        abortOnError false
    }
}

dependencies {
    if (hasGradle3Support) {
        oreoDependencies.each {
            add(it.configuration, it.dependency)
        }

        implementation fileTree(include: ['*.jar'], dir: 'libs')
    } else {
        preoreoDependencies.each {
            add(it.configuration, it.dependency)
        }

        compile fileTree(include: ['*.jar'], dir: 'libs')
    }
}
